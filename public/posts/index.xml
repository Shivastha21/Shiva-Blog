<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Terminal</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>/posts/staring-blog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/staring-blog/</guid>
      <description>&lt;p&gt;Today will be writing abt AI and Machine learning&lt;/p&gt;
&lt;p&gt;Todays topic  Gradient descent&lt;/p&gt;
&lt;p&gt;How does the machine learn&lt;/p&gt;
&lt;p&gt;proposal Discussed&lt;/p&gt;
&lt;p&gt;Hello i am fine
here it is&lt;/p&gt;</description>
      <content>&lt;p&gt;Today will be writing abt AI and Machine learning&lt;/p&gt;
&lt;p&gt;Todays topic  Gradient descent&lt;/p&gt;
&lt;p&gt;How does the machine learn&lt;/p&gt;
&lt;p&gt;proposal Discussed&lt;/p&gt;
&lt;p&gt;Hello i am fine
here it is&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title></title>
      <link>/posts/tryhack-me/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/tryhack-me/</guid>
      <description>&lt;p&gt;Day 1
Learned about
Operational Security (OPSEC) is a set of principals and tactics used to attempt to protect the security of an operator or operation. An example of this may be using code names instead of your real names, or using a proxy to conceal your IP address.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;file&lt;/code&gt; command in Unix/Linux is used to determine the type of a file. It analyzes the file&amp;rsquo;s content and provides information about its format, such as whether it&amp;rsquo;s a text file, binary, or executable. This can be useful in cybersecurity for identifying suspicious files.&lt;/p&gt;</description>
      <content>&lt;p&gt;Day 1
Learned about
Operational Security (OPSEC) is a set of principals and tactics used to attempt to protect the security of an operator or operation. An example of this may be using code names instead of your real names, or using a proxy to conceal your IP address.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;file&lt;/code&gt; command in Unix/Linux is used to determine the type of a file. It analyzes the file&amp;rsquo;s content and provides information about its format, such as whether it&amp;rsquo;s a text file, binary, or executable. This can be useful in cybersecurity for identifying suspicious files.&lt;/p&gt;
&lt;p&gt;exiftool command is ExifTool is a command-line application for reading, writing, and editing metadata in various file formats.
To use ExifTool, you can run commands like &lt;code&gt;exiftool filename&lt;/code&gt; to view metadata or &lt;code&gt;exiftool -tag=value filename&lt;/code&gt; to edit metadata.&lt;/p&gt;
&lt;p&gt;Day 2&lt;/p&gt;
&lt;p&gt;Day 3
ELK stands for Elasticsearch, Logstash, and Kibana. These are three open-source tools that are commonly used together to collect, store, analyse, and visualise data.&lt;/p&gt;
&lt;p&gt;Day 4 Added a new File in Try hack me and created the&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title></title>
      <link>/posts/web-dev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/web-dev/</guid>
      <description>&lt;h1 id=&#34;pillar-of-web-dev&#34;&gt;Pillar of Web dev&lt;/h1&gt;
&lt;h2 id=&#34;frontend&#34;&gt;Frontend&lt;/h2&gt;
&lt;p&gt;1st step
HTML -
CSS -
JavaScript -&lt;/p&gt;
&lt;p&gt;2nd Step
Portfolio
Start building project combining 3 languages
Clone of basic website
simple projects
Mdn Doc For new projects - &lt;a href=&#34;https://developer.mozilla.org/en-US/&#34;&gt;https://developer.mozilla.org/en-US/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;before picking JS framework
Try to start from CSS framework Bootstrap
Optional Tailwind CSS&lt;/p&gt;
&lt;p&gt;Question will be logic from JS in interview from good companies&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Like Asynchronous Programming&lt;/strong&gt;
&lt;strong&gt;JavaScript Promises&lt;/strong&gt;
&lt;strong&gt;Async Await&lt;/strong&gt;
&lt;strong&gt;Call Stack&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Learn System command
Git and Github (compulsory)&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;pillar-of-web-dev&#34;&gt;Pillar of Web dev&lt;/h1&gt;
&lt;h2 id=&#34;frontend&#34;&gt;Frontend&lt;/h2&gt;
&lt;p&gt;1st step
HTML -
CSS -
JavaScript -&lt;/p&gt;
&lt;p&gt;2nd Step
Portfolio
Start building project combining 3 languages
Clone of basic website
simple projects
Mdn Doc For new projects - &lt;a href=&#34;https://developer.mozilla.org/en-US/&#34;&gt;https://developer.mozilla.org/en-US/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;before picking JS framework
Try to start from CSS framework Bootstrap
Optional Tailwind CSS&lt;/p&gt;
&lt;p&gt;Question will be logic from JS in interview from good companies&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Like Asynchronous Programming&lt;/strong&gt;
&lt;strong&gt;JavaScript Promises&lt;/strong&gt;
&lt;strong&gt;Async Await&lt;/strong&gt;
&lt;strong&gt;Call Stack&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Learn System command
Git and Github (compulsory)&lt;/p&gt;
&lt;h2 id=&#34;backend&#34;&gt;Backend&lt;/h2&gt;
&lt;p&gt;(stack in bracket)
&lt;strong&gt;JS - Node JS ( Mern )&lt;/strong&gt;
Python - django , faslk
Java , PHP( LAMP)
.NET&lt;/p&gt;
&lt;p&gt;API - How does it work?
Request and Response Cycle
How do we build MVC architecture
Templating
Connect backend With Database
Error handling exception Handling&lt;/p&gt;
&lt;h2 id=&#34;database&#34;&gt;Database&lt;/h2&gt;
&lt;p&gt;Learn with back end
Learn both
SQL (MySQL)
and
NoSQL (mangoDB)&lt;/p&gt;
&lt;p&gt;Last step
Deployment
like Vercel&lt;/p&gt;
&lt;p&gt;AWS and Azure&lt;/p&gt;
&lt;p&gt;Full Stack Project and Deployment&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
